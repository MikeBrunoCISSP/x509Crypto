<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NuGet.Repositories</name>
    </assembly>
    <members>
        <member name="P:NuGet.Repositories.LocalPackageInfo.Nuspec">
            <summary>
            Caches the nuspec reader.
            If the nuspec does not exist this will throw a friendly exception.
            </summary>
        </member>
        <member name="T:NuGet.Repositories.NuGetv3LocalRepository">
            <summary>
            Caches package info from the global packages folder in memory.
            Packages not yet in the cache will be retrieved from disk.
            </summary>
        </member>
        <member name="M:NuGet.Repositories.NuGetv3LocalRepository.ClearCacheForIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove cached results for the given ids. This is needed
            after installing a new package.
            </summary>
        </member>
        <member name="T:NuGet.Shared.HashCodeCombiner">
            <summary>
            Hash code creator, based on the original NuGet hash code combiner/ASP hash code combiner implementations
            </summary>
        </member>
        <member name="M:NuGet.Shared.HashCodeCombiner.GetHashCode(System.Object[])">
            <summary>
            Create a unique hash code for the given set of items
            </summary>
        </member>
        <member name="M:NuGet.Shared.Extensions.OrderedEquals``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two enumberables for equality, ordered according to the specified key and optional comparer. Handles null values gracefully.
            </summary>
            <typeparam name="TSource">The type of the list</typeparam>
            <typeparam name="TKey">The type of the sorting key</typeparam>
            <param name="self">This list</param>
            <param name="other">The other list</param>
            <param name="keySelector">The function to extract the key from each item in the list</param>
            <param name="orderComparer">An optional comparer for comparing keys</param>
            <param name="sequenceComparer">An optional comparer for sequences</param>
        </member>
    </members>
</doc>
